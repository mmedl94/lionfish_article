wines <- read.csv2("/home/matthias/Desktop/Boku_learn/lbt_24/wines.csv")
View(wines)
# Boxplot des Alkohol Gehalts
boxplot(
alcohol ~ vintages,
data = wines,
ylab = "Alkohol Gehalt",
main = "Alkohol Gehalt",
col = "steelblue"
)
model <- lm(alcohol ~ vintages, data = wines)
summary(model)
anova(model)
install.packages("tidyverse")
install.packages("ragg")
# Load required libraries
library(ggplot2)
library(grid)
library(png)
library(gridExtra)
library(imager)
library(imagefx)
setwd("/home/matthias/Desktop/Work/gsoc/paper/pytour_paper")
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Calculate the crop height (cropping 7.2%)
crop_height <- floor(height * 0.072)
# Crop the top 7.2% using imsub (no stretching here yet)
cropped_img <- imsub(img, y > crop_height) # Keep pixels below the top 7.2%
# Calculate the new dimensions after stretching by 3%
new_height <- floor(dim(cropped_img)[1] * 1.03)
new_width <- floor(dim(cropped_img)[2] * 1.08)
# Stretch the cropped image by resizing it to the new dimensions
stretched_img <- resize(cropped_img, size_y = new_height, size_x = new_width)
# Convert the stretched image to raster format for ggplot
grob_img <- rasterGrob(as.raster(stretched_img), interpolate = TRUE)
# Create a ggplot with the stretched image, preserving the new aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = new_height / new_width) +  # Preserve new aspect ratio after stretch
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Calculate the crop height (cropping 7.2%)
crop_height <- floor(height * 0.072)
# Crop the top 7.2% using imsub (no stretching here yet)
cropped_img <- imsub(img, y > crop_height) # Keep pixels below the top 7.2%
# Calculate the new dimensions after stretching by 3%
new_height <- floor(dim(cropped_img)[1] * 1.03)
new_width <- floor(dim(cropped_img)[2] * 1.05)
# Stretch the cropped image by resizing it to the new dimensions
stretched_img <- resize(cropped_img, size_y = new_height, size_x = new_width)
# Convert the stretched image to raster format for ggplot
grob_img <- rasterGrob(as.raster(stretched_img), interpolate = TRUE)
# Create a ggplot with the stretched image, preserving the new aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = new_height / new_width) +  # Preserve new aspect ratio after stretch
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
# Calculate the height to crop (top 7.2%)
crop_height <- floor(height * 0.072)
# Crop the top 7.2% using imsub (no stretching)
cropped_img <- imsub(img, y > crop_height) # Keep pixels below the top 7.2%
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
# Calculate the height to crop (top 7.2%)
crop_height <- floor(height * 0.1)
# Crop the top 7.2% using imsub (no stretching)
cropped_img <- imsub(img, y > crop_height) # Keep pixels below the top 7.2%
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
# Calculate the height to crop (top 7.2%)
crop_height <- floor(height * 0.09)
# Crop the top 7.2% using imsub (no stretching)
cropped_img <- imsub(img, y > crop_height) # Keep pixels below the top 7.2%
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
# Calculate the height to crop (top 7.2%)
crop_height <- floor(height * 0.074)
# Crop the top 7.2% using imsub (no stretching)
cropped_img <- imsub(img, y > crop_height) # Keep pixels below the top 7.2%
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop (adjust as needed)
crop_y_percent <- 0.072  # Crop 7.2% from top and bottom
crop_x_percent <- 0.05   # Crop 5% from left and right
# Calculate the number of pixels to crop in both x and y directions
crop_height <- floor(height * crop_y_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image by removing the top, bottom, left, and right borders
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_height & y < (height - crop_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop (adjust as needed)
crop_y_percent <- 0.03  # Crop 7.2% from top and bottom
crop_x_percent <- 0.02   # Crop 5% from left and right
# Calculate the number of pixels to crop in both x and y directions
crop_height <- floor(height * crop_y_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image by removing the top, bottom, left, and right borders
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_height & y < (height - crop_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop from the top and bottom
crop_top_percent <- 0.072   # Crop 7.2% from the top
crop_bottom_percent <- 0.03 # Crop 3% from the bottom
crop_x_percent <- 0.05      # Crop 5% from left and right (if needed)
# Calculate the number of pixels to crop
crop_top_height <- floor(height * crop_top_percent)
crop_bottom_height <- floor(height * crop_bottom_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image from the top, bottom, left, and right
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_top_height & y < (height - crop_bottom_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop from the top and bottom
crop_top_percent <- 0.072   # Crop 7.2% from the top
crop_bottom_percent <- 0.02 # Crop 3% from the bottom
crop_x_percent <- 0.03      # Crop 5% from left and right (if needed)
# Calculate the number of pixels to crop
crop_top_height <- floor(height * crop_top_percent)
crop_bottom_height <- floor(height * crop_bottom_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image from the top, bottom, left, and right
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_top_height & y < (height - crop_bottom_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop from the top and bottom
crop_top_percent <- 0.072   # Crop 7.2% from the top
crop_bottom_percent <- 0.01 # Crop 3% from the bottom
crop_x_percent <- 0.035      # Crop 5% from left and right (if needed)
# Calculate the number of pixels to crop
crop_top_height <- floor(height * crop_top_percent)
crop_bottom_height <- floor(height * crop_bottom_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image from the top, bottom, left, and right
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_top_height & y < (height - crop_bottom_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop from the top and bottom
crop_top_percent <- 0.072   # Crop 7.2% from the top
crop_bottom_percent <- 0 # Crop 3% from the bottom
crop_x_percent <- 0.035      # Crop 5% from left and right (if needed)
# Calculate the number of pixels to crop
crop_top_height <- floor(height * crop_top_percent)
crop_bottom_height <- floor(height * crop_bottom_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image from the top, bottom, left, and right
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_top_height & y < (height - crop_bottom_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.07, "npc"), y = unit(0.9, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
plot_b <- create_image_plot("images_raw/winteractiv_clusters/c2.png", "B")
plot_c <- create_image_plot("images_raw/winteractiv_clusters/c3.png", "C")
plot_d <- create_image_plot("images_raw/winteractiv_clusters/c4.png", "D")
plot_e <- create_image_plot("images_raw/winteractiv_clusters/c5.png", "E")
plot_f <- create_image_plot("images_raw/winteractiv_clusters/c6.png", "F")
# Arrange both plots side by side
combined_plot <- grid.arrange(plot_a,
plot_b,
plot_c,
plot_d,
plot_e,
plot_f,
ncol=3,padding = unit(0, "line"))
# Save the final plot as a .png file
ggsave("winter_activ_cluster_highlights.png", combined_plot,  width = 12, height = 8,dpi=300)
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop from the top and bottom
crop_top_percent <- 0.072   # Crop 7.2% from the top
crop_bottom_percent <- 0 # Crop 3% from the bottom
crop_x_percent <- 0.035      # Crop 5% from left and right (if needed)
# Calculate the number of pixels to crop
crop_top_height <- floor(height * crop_top_percent)
crop_bottom_height <- floor(height * crop_bottom_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image from the top, bottom, left, and right
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_top_height & y < (height - crop_bottom_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.05, "npc"), y = unit(0.95, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
create_image_plot <- function(image_path, label) {
# Load the image using imager
img <- load.image(image_path)
# Get image dimensions
height <- dim(img)[1]
width <- dim(img)[2]
# Define the percentages to crop from the top and bottom
crop_top_percent <- 0.072   # Crop 7.2% from the top
crop_bottom_percent <- 0 # Crop 3% from the bottom
crop_x_percent <- 0.035      # Crop 5% from left and right (if needed)
# Calculate the number of pixels to crop
crop_top_height <- floor(height * crop_top_percent)
crop_bottom_height <- floor(height * crop_bottom_percent)
crop_width <- floor(width * crop_x_percent)
# Crop the image from the top, bottom, left, and right
cropped_img <- imsub(img,
x > crop_width & x < (width - crop_width),  # Crop from left and right
y > crop_top_height & y < (height - crop_bottom_height))  # Crop from top and bottom
# Convert the cropped image to raster format for ggplot
grob_img <- rasterGrob(as.raster(cropped_img), interpolate = TRUE)
# Create a ggplot with the cropped image, preserving the aspect ratio
image_plot <- ggplot() +
annotation_custom(grob_img, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
coord_fixed(ratio = dim(cropped_img)[1] / dim(cropped_img)[2]) +  # Preserve aspect ratio
theme_void() +
theme(plot.margin = margin(0, 0, 0, 0, "cm"))
# Add the label to the top-left corner
labeled_plot <- image_plot +
annotation_custom(
grob = textGrob(label, x = unit(0.05, "npc"), y = unit(0.95, "npc"),
hjust = 0, vjust = 1, gp = gpar(fontsize = 18, fontface = "bold"))
)
return(labeled_plot)
}
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_a
plot_a <- create_image_plot("images_raw/winteractiv_clusters/c1.png", "A")
plot_b <- create_image_plot("images_raw/winteractiv_clusters/c2.png", "B")
plot_c <- create_image_plot("images_raw/winteractiv_clusters/c3.png", "C")
plot_d <- create_image_plot("images_raw/winteractiv_clusters/c4.png", "D")
plot_e <- create_image_plot("images_raw/winteractiv_clusters/c5.png", "E")
plot_f <- create_image_plot("images_raw/winteractiv_clusters/c6.png", "F")
# Arrange both plots side by side
combined_plot <- grid.arrange(plot_a,
plot_b,
plot_c,
plot_d,
plot_e,
plot_f,
ncol=3,padding = unit(0, "line"))
# Save the final plot as a .png file
ggsave("winter_activ_cluster_highlights.png", combined_plot,  width = 12, height = 8,dpi=300)
